{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Preloader, Placeholder } from 'react-preloading-screen';\nimport Link from 'next/link';\n\nvar Error = /*#__PURE__*/function (_React$Component) {\n  _inherits(Error, _React$Component);\n\n  function Error() {\n    _classCallCheck(this, Error);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Error).apply(this, arguments));\n  }\n\n  _createClass(Error, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Preloader, null, __jsx(Placeholder, null, __jsx(\"div\", {\n        className: \"preloader\"\n      }, __jsx(\"div\", {\n        className: \"spinner\"\n      }))), __jsx(\"section\", {\n        className: \"error-area\"\n      }, __jsx(\"div\", {\n        className: \"d-table\"\n      }, __jsx(\"div\", {\n        className: \"d-table-cell\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"div\", {\n        className: \"error-content\"\n      }, __jsx(\"div\", {\n        className: \"notfound-404\"\n      }, __jsx(\"h1\", null, \"Oops!\")), __jsx(\"h3\", null, this.props.statusCode ? \"An error \".concat(this.props.statusCode, \" occurred on server\") : 'An error occurred on client'), __jsx(\"p\", null, \"The page you are looking for might have been removed had its name changed or is temporarily unavailable.\"), __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        href: \"/\"\n      }, \"Go to Homepage\")))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var res = _ref.res,\n          err = _ref.err;\n      var statusCode = res ? res.statusCode : err ? err.statusCode : null;\n      return {\n        statusCode: statusCode\n      };\n    }\n  }]);\n\n  return Error;\n}(React.Component);\n\nexport default Error;","map":null,"metadata":{},"sourceType":"module"}